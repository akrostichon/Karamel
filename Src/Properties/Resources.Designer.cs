//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Karamel.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Karamel.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apache License
        ///
        ///Version 2.0, January 2004
        ///
        ///http://www.apache.org/licenses/
        ///
        ///TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
        ///
        ///1. Definitions.
        ///
        ///&quot;License&quot; shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.
        ///
        ///&quot;Licensor&quot; shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.
        ///
        ///&quot;Legal Entity&quot; shall mean the union of the acting entity and all other entities that c [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Apache_license {
            get {
                return ResourceManager.GetString("Apache_license", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) 2015, Sanjin Matusan
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
        ///
        ///1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
        ///
        ///2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials p [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DataGridFilter_License {
            get {
                return ResourceManager.GetString("DataGridFilter_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BSD 3-Clause License
        ///
        ///Copyright (c) 2015, Jan Karger (Steven Kirk)
        ///All rights reserved.
        ///
        ///Redistribution and use in source and binary forms, with or without
        ///modification, are permitted provided that the following conditions are met:
        ///
        ///* Redistributions of source code must retain the above copyright notice, this
        ///  list of conditions and the following disclaimer.
        ///
        ///* Redistributions in binary form must reproduce the above copyright notice,
        ///  this list of conditions and the following disclaimer in the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string gong_wpf_dragdrop_License {
            get {
                return ResourceManager.GetString("gong_wpf_dragdrop_License", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
        /// </summary>
        internal static System.Drawing.Icon karamel {
            get {
                object obj = ResourceManager.GetObject("karamel", resourceCulture);
                return ((System.Drawing.Icon)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ---------------------------------------------------------------------------
        ///
        ///Library:      KCDGPlayer.dll
        ///Copyright:    Kelvin Lawson (2015)
        ///Author:       Kelvin Lawson &lt;kelvinl@users.sf.net&gt;
        ///
        ///---------------------------------------------------------------------------
        ///
        ///LICENSE
        ///
        ///The licensee is given a permanent license to use the DLL in their company&apos;s
        ///products. This license is granted for life, and there is no limit to the
        ///number of the licensee&apos;s products it can be used with. Rights are grante [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string KCDGPlayer_license {
            get {
                return ResourceManager.GetString("KCDGPlayer_license", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Microsoft Public License (Ms-PL)
        ///
        ///This license governs use of the accompanying software, the DotNetZip library (&quot;the software&quot;). If you use the software, you accept this license. If you do not accept the license, do not use the software.
        ///
        ///1. Definitions
        ///
        ///The terms &quot;reproduce,&quot; &quot;reproduction,&quot; &quot;derivative works,&quot; and &quot;distribution&quot; have the same meaning here as under U.S. copyright law.
        ///
        ///A &quot;contribution&quot; is the original software, or any additions or changes to the software.
        ///
        ///A &quot;contributor&quot; is any  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string License {
            get {
                return ResourceManager.GetString("License", resourceCulture);
            }
        }
    }
}
